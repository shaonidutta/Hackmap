import { useState, useEffect, useRef } from "react";
import { motion, useInView, AnimatePresence } from "framer-motion";
import {
  Globe,
  Users,
  Lightbulb,
  MessageSquare,
  Menu,
  X,
  GithubIcon,
  TwitterIcon,
  ChevronRight,
  Info,
  HelpCircle,
} from "lucide-react";
import { Button } from "../../components/ui/button";
import { CustomLink } from "../../components/ui/custom-link";

export default function HomePage() {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [scrolled, setScrolled] = useState(false);
  const [activeSection, setActiveSection] = useState("home");

  const featuresRef = useRef<HTMLDivElement>(null);
  const ctaRef = useRef<HTMLDivElement>(null);

  const featuresInView = useInView(featuresRef, { once: true, amount: 0.3 });
  const ctaInView = useInView(ctaRef, { once: true, amount: 0.3 });

  useEffect(() => {
    const handleScroll = () => {
      setScrolled(window.scrollY > 20);

      // Update active section based on scroll position
      const scrollPosition = window.scrollY + 100;

      const featuresElement = document.getElementById("features");
      const ctaElement = document.getElementById("cta");

      if (featuresElement && featuresElement.offsetTop <= scrollPosition) {
        setActiveSection("features");
      } else {
        setActiveSection("home");
      }

      if (ctaElement && ctaElement.offsetTop <= scrollPosition) {
        setActiveSection("cta");
      }
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const navLinks = [
    { name: "Features", href: "#features", icon: <Info className="h-4 w-4 mr-1" /> },
  ];

  return (
    <div className="min-h-screen bg-white">
      {/* Header */}
      <header
        className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
          scrolled ? "bg-white shadow-md py-3" : "bg-transparent py-5"
        }`}
      >
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center">
            {/* Logo */}
            <div className="flex-shrink-0">
              <CustomLink href="/" className="flex items-center">
                <span
                  className={`text-2xl font-bold ${scrolled ? "text-blue-600" : "text-white"}`}
                >
                  HackMap
                </span>
              </CustomLink>
            </div>

            {/* Desktop Navigation */}
            <nav className="hidden md:flex items-center space-x-1">
              {/* Nav Links */}
              <div className="flex items-center space-x-1">
                {navLinks.map((link) => (
                  <motion.div
                    key={link.name}
                    initial={{ opacity: 0, y: -10 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.3 }}
                    className="relative"
                  >
                    <CustomLink
                      href={link.href}
                      className={`flex items-center px-3 py-2 text-sm font-medium transition-colors duration-200 ${
                        scrolled
                          ? activeSection === link.name.toLowerCase()
                            ? "text-blue-600"
                            : "text-gray-600 hover:text-blue-600"
                          : activeSection === link.name.toLowerCase()
                          ? "text-white"
                          : "text-gray-100 hover:text-white"
                      }`}
                    >
                      {link.icon}
                      {link.name}
                    </CustomLink>
                    {activeSection === link.name.toLowerCase() && (
                      <motion.div
                        className={`absolute bottom-0 left-0 right-0 h-0.5 ${scrolled ? "bg-blue-600" : "bg-white"}`}
                        layoutId="activeSection"
                        transition={{ type: "spring", stiffness: 500, damping: 30 }}
                      />
                    )}
                  </motion.div>
                ))}
              </div>

              {/* Sign In Link */}
              <motion.div
                initial={{ opacity: 0, x: 20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.5, delay: 0.3 }}
              >
                <CustomLink
                  href="/login"
                  className={`px-3 py-2 text-sm font-medium transition-colors duration-200 ${
                    scrolled ? "text-gray-600 hover:text-blue-600" : "text-white hover:text-blue-100"
                  }`}
                >
                  Sign In
                </CustomLink>
              </motion.div>

              {/* Sign Up Button */}
              <motion.div
                initial={{ opacity: 0, x: 20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.5, delay: 0.4 }}
                whileHover={{ scale: 1.05 }}
              >
                <CustomLink href="/register">
                  <Button
                    className={`px-4 py-2 rounded-md transition-all duration-200 shadow-lg hover:shadow-blue-200/50 ${
                      scrolled ? "bg-blue-600 hover:bg-blue-700 text-white" : "bg-white hover:bg-blue-50 text-blue-600"
                    }`}
                  >
                    Sign Up
                  </Button>
                </CustomLink>
              </motion.div>
            </nav>

            {/* Mobile menu button */}
            <div className="md:hidden">
              <button
                onClick={() => setIsMenuOpen(!isMenuOpen)}
                className={`p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500 ${
                  scrolled ? "text-gray-600" : "text-white"
                }`}
              >
                <span className="sr-only">Open main menu</span>
                {isMenuOpen ? (
                  <X className="h-6 w-6" aria-hidden="true" />
                ) : (
                  <Menu className="h-6 w-6" aria-hidden="true" />
                )}
              </button>
            </div>
          </div>
        </div>

        {/* Mobile menu */}
        <AnimatePresence>
          {isMenuOpen && (
            <motion.div
              initial={{ opacity: 0, height: 0 }}
              animate={{ opacity: 1, height: "auto" }}
              exit={{ opacity: 0, height: 0 }}
              transition={{ duration: 0.3 }}
              className="md:hidden bg-white shadow-lg"
            >
              <div className="px-2 pt-2 pb-3 space-y-1 sm:px-3">
                {navLinks.map((link, index) => (
                  <motion.div
                    key={link.name}
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.3, delay: 0.05 * index }}
                  >
                    <CustomLink
                      href={link.href}
                      className={`flex items-center px-3 py-2 text-base font-medium rounded-md transition-colors duration-200 ${
                        activeSection === link.name.toLowerCase()
                          ? "text-blue-600 bg-blue-50"
                          : "text-gray-600 hover:text-blue-600 hover:bg-gray-50"
                      }`}
                      onClick={() => setIsMenuOpen(false)}
                    >
                      {link.icon}
                      {link.name}
                    </CustomLink>
                  </motion.div>
                ))}

                <motion.div
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.3, delay: 0.3 }}
                >
                  <CustomLink
                    href="/login"
                    className="block px-3 py-2 text-base font-medium text-gray-600 hover:text-blue-600 hover:bg-gray-50 rounded-md transition-colors duration-200"
                    onClick={() => setIsMenuOpen(false)}
                  >
                    Sign In
                  </CustomLink>
                </motion.div>

                <motion.div
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.3, delay: 0.4 }}
                >
                  <CustomLink
                    href="/register"
                    className="block mt-2 px-3 py-2 text-base font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-md transition-colors duration-200"
                    onClick={() => setIsMenuOpen(false)}
                  >
                    Sign Up
                  </CustomLink>
                </motion.div>
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </header>

      {/* Hero Section */}
      <section className="relative pt-16 pb-32 flex content-center items-center justify-center min-h-screen">
        {/* Background gradient */}
        <div className="absolute top-0 w-full h-full bg-gradient-to-b from-blue-600 to-blue-800 z-0"></div>

        <div className="container relative mx-auto px-4 z-10">
          <div className="flex flex-wrap items-center">
            <div className="w-full lg:w-6/12 px-4 ml-auto mr-auto text-center lg:text-left">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.7 }}
              >
                <h1 className="text-white font-semibold text-4xl md:text-5xl leading-tight">
                  Connect, Collaborate, Build Amazing Projects
                </h1>
                <p className="mt-4 text-lg text-gray-200 leading-relaxed">
                  Join hackathons, form teams, and collaborate on innovative projects with fellow developers, designers, and creators.
                </p>

                <motion.div
                  className="mt-8 flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4 justify-center lg:justify-start"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.7, delay: 0.5 }}
                >
                  <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
                    <CustomLink href="/register">
                      <Button className="w-full sm:w-auto bg-white hover:bg-blue-50 text-blue-600 px-8 py-3 rounded-md text-base font-medium shadow-lg hover:shadow-blue-900/20 transition-all duration-300">
                        Get Started
                      </Button>
                    </CustomLink>
                  </motion.div>

                  <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
                    <CustomLink href="/login">
                      <Button
                        variant="outline"
                        className="w-full sm:w-auto border-blue-200 bg-transparent text-white hover:bg-white/10 px-8 py-3 rounded-md text-base font-medium transition-all duration-300"
                      >
                        Sign In
                      </Button>
                    </CustomLink>
                  </motion.div>
                </motion.div>
              </motion.div>
            </div>

            <div className="w-full lg:w-5/12 px-4 ml-auto mr-auto mt-12 lg:mt-0">
              <motion.div
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.7, delay: 0.2 }}
                className="relative"
              >
                <div className="w-full h-64 md:h-96 bg-blue-400 bg-opacity-20 backdrop-filter backdrop-blur-lg rounded-xl shadow-2xl flex items-center justify-center">
                  <div className="text-white text-xl">Hero Graphic Placeholder</div>
                </div>
              </motion.div>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex flex-col md:flex-row justify-between">
            <div className="mb-8 md:mb-0">
              <h2 className="text-2xl font-bold mb-4">HackMap</h2>
              <p className="text-gray-400 max-w-md">
                The platform for hackathons, team formation, and project collaboration.
              </p>
              <div className="mt-4 flex space-x-4">
                <motion.a
                  href="https://github.com"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="text-gray-400 hover:text-white transition-colors duration-200"
                  whileHover={{ scale: 1.1 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <span className="sr-only">GitHub</span>
                  <GithubIcon className="h-6 w-6" />
                </motion.a>
                <motion.a
                  href="#"
                  className="text-gray-400 hover:text-white transition-colors duration-200"
                  whileHover={{ scale: 1.1 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <span className="sr-only">Twitter</span>
                  <TwitterIcon className="h-6 w-6" />
                </motion.a>
              </div>
            </div>

            <div className="grid grid-cols-2 md:grid-cols-3 gap-8">
              <div>
                <h3 className="text-sm font-semibold text-gray-300 uppercase tracking-wider mb-4">Platform</h3>
                <ul className="space-y-2">
                  <li>
                    <CustomLink href="#features" className="text-gray-400 hover:text-white transition-colors duration-200">
                      Features
                    </CustomLink>
                  </li>
                </ul>
              </div>
            </div>
          </div>

          <div className="mt-12 pt-8 border-t border-gray-800 flex flex-col md:flex-row justify-between items-center">
            <p className="text-base text-gray-400">&copy; {new Date().getFullYear()} HackMap. All rights reserved.</p>
            <div className="mt-4 md:mt-0 flex space-x-6">
              <CustomLink href="#" className="text-gray-400 hover:text-white transition-colors duration-200">
                Privacy Policy
              </CustomLink>
              <CustomLink href="#" className="text-gray-400 hover:text-white transition-colors duration-200">
                Terms of Service
              </CustomLink>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
}
